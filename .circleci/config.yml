version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1

refs:
  container_config: &container_config
    docker:
      - image: circleci/node:10
    working_directory: ~/app

  steps:
    - &install_dependencies
      run:
        name: Install Dependencies
        command: |
          npm install
          sudo apt-get -y -qq install awscli
    - &save_cache
      save_cache:
        paths:
          - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}
    - &restore_cache
      restore_cache:
        keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
    - &persist_workspace
      persist_to_workspace:
        root: ./
        paths:
          - ./
    - &attach_workspace
      attach_workspace:
        at: ~/app
    - &s3_sync_delete
      aws-s3/sync:
        from: public
        overwrite: true
        to: 's3://${AWS_DEST_BUCKET}'
        aws-region: AWS_REGION
        aws-access-key-id: AWS_ACCESS_KEY_ID
        aws-secret-access-key: AWS_SECRET_ACCESS_KEY
    - &invalidate_cache
      run:
        name: Invalidate CloudFront Cache
        command: |
          aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DIST_ID} --paths '/*'
    - &lint_fix
      run:
        name: Run Linting & Fix Errors
        command: npm run lint:fix
    - &semantic_release
      run:
        name: Semantic Release
        command: |
          export NPM_TOKEN=${NPM_TOKEN}
          export GH_TOKEN=${GH_TOKEN}
          export GIT_AUTHOR_NAME=${GIT_AUTHOR_NAME}
          export GIT_AUTHOR_EMAIL=${GIT_AUTHOR_EMAIL}
          export GIT_COMMITTER_NAME=${GIT_COMMITTER_NAME}
          export GIT_COMMITTER_EMAIL=${GIT_COMMITTER_EMAIL}
          npx semantic-release

jobs:
  build:
    <<: *container_config
    steps:
      - checkout
      - *install_dependencies
      - *save_cache
      - *restore_cache
      - *lint_fix
      - *persist_workspace

  deploy_dev:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: Build Dev
          command: npm run build:dev
      - *s3_sync_delete
      - *invalidate_cache

  deploy_prod:
    <<: *container_config
    steps:
      - *attach_workspace
      - run:
          name: Build Prod
          command: npm run build:prod
      - *s3_sync_delete
      - *invalidate_cache

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy_dev:
          context: starter-docs-dev
          filters:
            branches:
              only:
                - develop
          requires:
            - build
      - deploy_prod:
          context: starter-docs-prod
          filters:
            branches:
              only:
                - main
          requires:
            - build
